2023-06-15 01:36:32.107 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 15840 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 01:36:32.112 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 01:36:32.113 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 01:36:32.668 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 01:36:32.741 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 10 MongoDB repository interfaces.
2023-06-15 01:36:33.609 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 01:36:33.623 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 01:36:33.625 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 01:36:33.625 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 01:36:33.720 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 01:36:33.720 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1534 ms
2023-06-15 01:36:33.926 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4f081b5d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 01:36:33.937 [cluster-ClusterId{value='648a4f01fcc0e071e40bb314', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24673200}
2023-06-15 01:36:35.202 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d32c1c7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a6dffdb, org.springframework.security.web.context.SecurityContextHolderFilter@77f03916, org.springframework.security.web.header.HeaderWriterFilter@186295cc, org.springframework.web.filter.CorsFilter@40ac0a56, org.springframework.security.web.authentication.logout.LogoutFilter@2a54c92e, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@25b4754a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21c34bf8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@559e3f67, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ec3a4c2, org.springframework.security.web.session.SessionManagementFilter@2c1a8529, org.springframework.security.web.access.ExceptionTranslationFilter@3b2db389, org.springframework.security.web.access.intercept.AuthorizationFilter@5eb2972f]
2023-06-15 01:36:35.373 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 01:36:35.391 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 01:36:35.397 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 3.84 seconds (process running for 4.589)
2023-06-15 01:36:42.633 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 01:36:42.640 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 01:36:42.640 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 01:36:42.642 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-06-15 01:37:05.456 [http-nio-8080-exec-5] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateRealEstateConfiguration in class com.myhouse.MyHouse.controller.RealEstateConfigurationController completed successfully. Message: Successfully updated real estate configuration
2023-06-15 01:47:46.080 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 17348 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 01:47:46.083 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 01:47:46.084 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 01:47:47.045 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 01:47:47.121 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 11 MongoDB repository interfaces.
2023-06-15 01:47:48.126 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 01:47:48.141 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 01:47:48.143 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 01:47:48.143 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 01:47:48.252 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 01:47:48.252 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2090 ms
2023-06-15 01:47:48.521 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7d2c345d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 01:47:48.533 [cluster-ClusterId{value='648a51a4d73039582d67fe96', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26425300}
2023-06-15 01:47:49.952 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@57fce8b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77204651, org.springframework.security.web.context.SecurityContextHolderFilter@48ee3c2d, org.springframework.security.web.header.HeaderWriterFilter@702b656a, org.springframework.web.filter.CorsFilter@51cca357, org.springframework.security.web.authentication.logout.LogoutFilter@6cde0c69, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@3a9c11fb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a80c534, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@fd5689d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@416c8bb5, org.springframework.security.web.session.SessionManagementFilter@39f4a7c4, org.springframework.security.web.access.ExceptionTranslationFilter@3a3316b6, org.springframework.security.web.access.intercept.AuthorizationFilter@70439c3]
2023-06-15 01:47:50.132 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 01:47:50.142 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.746 seconds (process running for 5.781)
2023-06-15 02:14:41.161 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 14892 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 02:14:41.164 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 02:14:41.165 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 02:14:42.012 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 02:14:42.213 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 189 ms. Found 11 MongoDB repository interfaces.
2023-06-15 02:14:43.616 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 02:14:43.628 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 02:14:43.630 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 02:14:43.630 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 02:14:43.748 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 02:14:43.748 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2514 ms
2023-06-15 02:14:44.072 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@269222ae]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 02:14:44.091 [cluster-ClusterId{value='648a57f30a572d15be5edf24', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38473600}
2023-06-15 02:14:46.056 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@492c8137, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@420b55ed, org.springframework.security.web.context.SecurityContextHolderFilter@1c31de5d, org.springframework.security.web.header.HeaderWriterFilter@66314fee, org.springframework.web.filter.CorsFilter@f237ae7, org.springframework.security.web.authentication.logout.LogoutFilter@39e7e040, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@42edde25, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@772cf46b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1b98355f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6fe5da76, org.springframework.security.web.session.SessionManagementFilter@38ebc866, org.springframework.security.web.access.ExceptionTranslationFilter@1e4d8770, org.springframework.security.web.access.intercept.AuthorizationFilter@45311a99]
2023-06-15 02:14:46.262 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 02:14:46.280 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 02:14:46.286 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 5.787 seconds (process running for 6.674)
2023-06-15 02:41:00.252 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 12952 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 02:41:00.256 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 02:41:00.257 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 02:41:01.034 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 02:41:01.123 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 84 ms. Found 11 MongoDB repository interfaces.
2023-06-15 02:41:02.108 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 02:41:02.122 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 02:41:02.123 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 02:41:02.123 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 02:41:02.228 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 02:41:02.229 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1902 ms
2023-06-15 02:41:02.470 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@b30a50d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 02:41:02.489 [cluster-ClusterId{value='648a5e1e87796151a9e578fd', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34196600}
2023-06-15 02:41:04.168 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@71668a67, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ff26c9, org.springframework.security.web.context.SecurityContextHolderFilter@af9dd34, org.springframework.security.web.header.HeaderWriterFilter@f237ae7, org.springframework.web.filter.CorsFilter@2ecdcfe3, org.springframework.security.web.authentication.logout.LogoutFilter@17ae13d5, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@65b73689, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@151659dd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a58e0e9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2047adea, org.springframework.security.web.session.SessionManagementFilter@66048ac4, org.springframework.security.web.access.ExceptionTranslationFilter@7037a680, org.springframework.security.web.access.intercept.AuthorizationFilter@5a6efe33]
2023-06-15 02:41:04.372 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 02:41:04.397 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 02:41:04.404 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.945 seconds (process running for 5.746)
2023-06-15 02:41:14.485 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 02:41:14.486 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 02:41:14.488 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-06-15 02:41:14.663 [http-nio-8080-exec-2] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 02:41:14.925 [http-nio-8080-exec-2] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-15 02:41:23.101 [http-nio-8080-exec-4] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method login of class com.myhouse.MyHouse.controller.AuthController: null
2023-06-15 02:41:23.111 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
java.lang.NoSuchMethodException: com.myhouse.MyHouse.controller.AuthController.login(com.myhouse.MyHouse.dto.user.LoginDTO,org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse)
	at java.base/java.lang.Class.getMethod(Class.java:2277)
	at com.myhouse.MyHouse.logging.SuccessLoggingAspect.getLoggableAnnotation(SuccessLoggingAspect.java:35)
	at com.myhouse.MyHouse.logging.SuccessLoggingAspect.logAfterExecution(SuccessLoggingAspect.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-15 02:42:06.975 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 6640 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 02:42:06.979 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 02:42:06.980 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 02:42:07.595 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 02:42:07.718 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 11 MongoDB repository interfaces.
2023-06-15 02:42:08.701 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 02:42:08.714 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 02:42:08.716 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 02:42:08.717 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 02:42:08.849 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 02:42:08.850 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1800 ms
2023-06-15 02:42:09.162 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d1d9d73]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 02:42:09.182 [cluster-ClusterId{value='648a5e61addc950a4687f801', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39670000}
2023-06-15 02:42:11.103 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@61d011e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b56947a, org.springframework.security.web.context.SecurityContextHolderFilter@7c9ea1d0, org.springframework.security.web.header.HeaderWriterFilter@10f8e2d2, org.springframework.web.filter.CorsFilter@1926f962, org.springframework.security.web.authentication.logout.LogoutFilter@5ee581db, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@62794582, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@319b1c77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@584136c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c82ad22, org.springframework.security.web.session.SessionManagementFilter@4fa8297b, org.springframework.security.web.access.ExceptionTranslationFilter@1f4d38f9, org.springframework.security.web.access.intercept.AuthorizationFilter@2110684a]
2023-06-15 02:42:11.313 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 02:42:11.330 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 02:42:11.337 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.965 seconds (process running for 5.981)
2023-06-15 02:42:23.554 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 02:42:23.562 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 02:42:23.562 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 02:42:23.563 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 02:42:24.104 [http-nio-8080-exec-1] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method login of class com.myhouse.MyHouse.controller.AuthController: null
2023-06-15 02:42:24.109 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
java.lang.NoSuchMethodException: com.myhouse.MyHouse.controller.AuthController.login(com.myhouse.MyHouse.dto.user.LoginDTO,org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse)
	at java.base/java.lang.Class.getMethod(Class.java:2277)
	at com.myhouse.MyHouse.logging.SuccessLoggingAspect.getLoggableAnnotation(SuccessLoggingAspect.java:35)
	at com.myhouse.MyHouse.logging.SuccessLoggingAspect.logAfterExecution(SuccessLoggingAspect.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-15 02:45:34.007 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 16868 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 02:45:34.010 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 02:45:34.011 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 02:45:34.677 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 02:45:34.752 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 11 MongoDB repository interfaces.
2023-06-15 02:45:35.661 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 02:45:35.669 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 02:45:35.670 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 02:45:35.671 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 02:45:35.768 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 02:45:35.768 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1682 ms
2023-06-15 02:45:36.003 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@102c18e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 02:45:36.022 [cluster-ClusterId{value='648a5f2f522e875d94f8b407', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=35537800}
2023-06-15 02:45:37.634 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28dacf31, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47e60b71, org.springframework.security.web.context.SecurityContextHolderFilter@492c8137, org.springframework.security.web.header.HeaderWriterFilter@4bff28e7, org.springframework.web.filter.CorsFilter@795faad, org.springframework.security.web.authentication.logout.LogoutFilter@51d88c38, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@17ae13d5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f237ae7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42edde25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69f3e556, org.springframework.security.web.session.SessionManagementFilter@ba0018e, org.springframework.security.web.access.ExceptionTranslationFilter@5bf523e3, org.springframework.security.web.access.intercept.AuthorizationFilter@44e08a7a]
2023-06-15 02:45:37.860 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 02:45:37.879 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 02:45:37.890 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.463 seconds (process running for 5.312)
2023-06-15 02:46:13.861 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 02:46:13.868 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 02:46:13.868 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 02:46:13.870 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-06-15 02:46:14.411 [http-nio-8080-exec-1] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method login of class com.myhouse.MyHouse.controller.AuthController: null
2023-06-15 02:46:14.416 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
java.lang.NoSuchMethodException: com.myhouse.MyHouse.controller.AuthController.login(com.myhouse.MyHouse.dto.user.LoginDTO,org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse)
	at java.base/java.lang.Class.getMethod(Class.java:2277)
	at com.myhouse.MyHouse.logging.SuccessLoggingAspect.getLoggableAnnotation(SuccessLoggingAspect.java:41)
	at com.myhouse.MyHouse.logging.SuccessLoggingAspect.logAfterExecution(SuccessLoggingAspect.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.controller.AuthController$$SpringCGLIB$$0.login(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-15 02:49:47.477 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 4656 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 02:49:47.482 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 02:49:47.484 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 02:49:48.213 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 02:49:48.326 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 107 ms. Found 11 MongoDB repository interfaces.
2023-06-15 02:49:49.659 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 02:49:49.674 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 02:49:49.676 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 02:49:49.676 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 02:49:49.809 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 02:49:49.810 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2222 ms
2023-06-15 02:49:50.124 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3a296107]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 02:49:50.143 [cluster-ClusterId{value='648a602e6b067379fb3214d3', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36513100}
2023-06-15 02:49:52.049 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@65b73689, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2047adea, org.springframework.security.web.context.SecurityContextHolderFilter@4a58e0e9, org.springframework.security.web.header.HeaderWriterFilter@77d95e5a, org.springframework.web.filter.CorsFilter@5af40e45, org.springframework.security.web.authentication.logout.LogoutFilter@36511772, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@1a06602f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f44d033, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@283bb8b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46591e98, org.springframework.security.web.session.SessionManagementFilter@af9dd34, org.springframework.security.web.access.ExceptionTranslationFilter@f237ae7, org.springframework.security.web.access.intercept.AuthorizationFilter@3ff26c9]
2023-06-15 02:49:52.297 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 02:49:52.313 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 02:49:52.319 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 5.734 seconds (process running for 6.841)
2023-06-15 02:50:26.200 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 16364 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 02:50:26.206 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 02:50:26.208 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 02:50:26.886 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 02:50:26.973 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 11 MongoDB repository interfaces.
2023-06-15 02:50:28.086 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 02:50:28.098 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 02:50:28.099 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 02:50:28.100 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 02:50:28.222 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 02:50:28.223 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1918 ms
2023-06-15 02:50:28.562 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@21edd891]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 02:50:28.580 [cluster-ClusterId{value='648a60548ee8b3193e0ad684', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=37776100}
2023-06-15 02:50:31.025 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2833c093, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7598d675, org.springframework.security.web.context.SecurityContextHolderFilter@61836cd9, org.springframework.security.web.header.HeaderWriterFilter@30bbe83, org.springframework.web.filter.CorsFilter@4946485c, org.springframework.security.web.authentication.logout.LogoutFilter@2b3b1124, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@4ae958b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7227926b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f75a9b1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c682e26, org.springframework.security.web.session.SessionManagementFilter@35a9e665, org.springframework.security.web.access.ExceptionTranslationFilter@1ae9d0e4, org.springframework.security.web.access.intercept.AuthorizationFilter@31f1b268]
2023-06-15 02:50:31.236 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 02:50:31.262 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 02:50:31.274 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 5.82 seconds (process running for 7.118)
2023-06-15 16:04:59.540 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 10308 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:04:59.546 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:04:59.547 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:05:01.143 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:05:01.250 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 101 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:05:03.164 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:05:03.192 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:05:03.193 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:05:03.194 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:05:03.405 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:05:03.409 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3767 ms
2023-06-15 16:05:03.866 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16bd7ae1]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:05:03.902 [cluster-ClusterId{value='648b1a8fe73cf248b9401c0d', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43661600}
2023-06-15 16:05:06.062 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@280d6a20, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56f72909, org.springframework.security.web.context.SecurityContextHolderFilter@126254ec, org.springframework.security.web.header.HeaderWriterFilter@2b9ecd05, org.springframework.web.filter.CorsFilter@71285693, org.springframework.security.web.authentication.logout.LogoutFilter@5627b8eb, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@3199a202, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c788d08, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2adc1e84, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7286827b, org.springframework.security.web.session.SessionManagementFilter@459e120b, org.springframework.security.web.access.ExceptionTranslationFilter@56499781, org.springframework.security.web.access.intercept.AuthorizationFilter@35524549]
2023-06-15 16:05:06.287 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:05:06.315 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:05:06.324 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 7.794 seconds (process running for 11.082)
2023-06-15 16:05:43.981 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:05:43.981 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:05:43.982 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:05:44.025 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774}] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:06:23.982 [http-nio-8080-exec-1] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method updateRealEstateConfiguration of class com.myhouse.MyHouse.service.RealEstateConfigurationService: null
2023-06-15 16:06:23.987 [http-nio-8080-exec-1] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method updateRealEstateConfiguration of class com.myhouse.MyHouse.controller.RealEstateConfigurationController: null
2023-06-15 16:06:23.990 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.StackOverflowError] with root cause
java.lang.StackOverflowError: null
	at java.base/java.util.LinkedHashMap.get(LinkedHashMap.java:449)
	at java.base/java.lang.Class.getAnnotation(Class.java:3997)
	at java.base/java.lang.reflect.AnnotatedElement.isAnnotationPresent(AnnotatedElement.java:292)
	at java.base/java.lang.Class.isAnnotationPresent(Class.java:4007)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:42)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
	at com.myhouse.MyHouse.logging.DatabaseLoggingAspect.getEntityId(DatabaseLoggingAspect.java:43)
2023-06-15 16:08:10.049 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 10068 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:08:10.056 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:08:10.058 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:08:10.731 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:08:10.809 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:08:12.048 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:08:12.058 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:08:12.059 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:08:12.059 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:08:12.183 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:08:12.184 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2031 ms
2023-06-15 16:08:12.465 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@349c4d1c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:08:12.486 [cluster-ClusterId{value='648b1b4c8969537e6e2d2792', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36869301}
2023-06-15 16:08:14.225 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1c788d08, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2adc1e84, org.springframework.security.web.context.SecurityContextHolderFilter@8ee03f5, org.springframework.security.web.header.HeaderWriterFilter@2dde0a34, org.springframework.web.filter.CorsFilter@2a99fa07, org.springframework.security.web.authentication.logout.LogoutFilter@2833c093, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@45b8bbbf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3359c3f6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3d3b272a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1df06ecd, org.springframework.security.web.session.SessionManagementFilter@50f05307, org.springframework.security.web.access.ExceptionTranslationFilter@6a04d2a4, org.springframework.security.web.access.intercept.AuthorizationFilter@126254ec]
2023-06-15 16:08:14.425 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:08:14.474 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:08:14.489 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 5.196 seconds (process running for 6.577)
2023-06-15 16:08:36.744 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:08:36.744 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:08:36.745 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-06-15 16:08:36.801 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:08:37.117 [http-nio-8080-exec-1] INFO  c.m.M.logging.DatabaseLoggingAspect - Performed Save operation on entity of type InvalidToken.
2023-06-15 16:09:39.584 [http-nio-8080-exec-1] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method logout of class com.myhouse.MyHouse.controller.AuthController: null
2023-06-15 16:09:39.590 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
java.lang.NoSuchMethodException: com.myhouse.MyHouse.controller.AuthController.logout(org.springframework.security.web.servletapi.HttpServlet3RequestFactory$Servlet3SecurityContextHolderAwareRequestWrapper)
	at java.base/java.lang.Class.getMethod(Class.java:2277)
	at com.myhouse.MyHouse.logging.SuccessLoggingAspect.getLoggableAnnotation(SuccessLoggingAspect.java:41)
	at com.myhouse.MyHouse.logging.SuccessLoggingAspect.logAfterExecution(SuccessLoggingAspect.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.controller.AuthController$$SpringCGLIB$$0.logout(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:537)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-15 16:10:22.321 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 8768 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:10:22.325 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:10:22.326 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:10:22.974 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:10:23.112 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:10:24.095 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:10:24.106 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:10:24.107 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:10:24.107 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:10:24.215 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:10:24.215 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1815 ms
2023-06-15 16:10:24.478 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@45801322]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:10:24.500 [cluster-ClusterId{value='648b1bd09d5d524e6285fcde', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33547601}
2023-06-15 16:10:26.115 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1b69fc07, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19e801b5, org.springframework.security.web.context.SecurityContextHolderFilter@49cceb19, org.springframework.security.web.header.HeaderWriterFilter@61d011e, org.springframework.web.filter.CorsFilter@24de63b, org.springframework.security.web.authentication.logout.LogoutFilter@3b2c8bda, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@42d0e41, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@131d977f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@616f81b5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50f05307, org.springframework.security.web.session.SessionManagementFilter@212e39ee, org.springframework.security.web.access.ExceptionTranslationFilter@5b6cc344, org.springframework.security.web.access.intercept.AuthorizationFilter@57a982f9]
2023-06-15 16:10:26.308 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:10:26.330 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:10:26.337 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.798 seconds (process running for 6.112)
2023-06-15 16:10:49.486 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:10:49.495 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:10:49.495 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:10:49.496 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:10:57.876 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: 
2023-06-15 16:16:25.256 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 15436 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:16:25.259 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:16:25.260 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:16:25.825 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:16:25.895 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:16:26.801 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:16:26.811 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:16:26.812 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:16:26.812 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:16:26.905 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:16:26.905 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1585 ms
2023-06-15 16:16:27.134 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@53a50b0a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:16:27.149 [cluster-ClusterId{value='648b1d3b865e917da81edc8a', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26385200}
2023-06-15 16:16:28.637 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2047adea, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5af40e45, org.springframework.security.web.context.SecurityContextHolderFilter@e8c84eb, org.springframework.security.web.header.HeaderWriterFilter@6339e604, org.springframework.web.filter.CorsFilter@1a06602f, org.springframework.security.web.authentication.logout.LogoutFilter@51869ad6, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@46591e98, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@283bb8b7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25e95af1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b6cc344, org.springframework.security.web.session.SessionManagementFilter@48692405, org.springframework.security.web.access.ExceptionTranslationFilter@42edde25, org.springframework.security.web.access.intercept.AuthorizationFilter@2ecdcfe3]
2023-06-15 16:16:28.850 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:16:28.870 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:16:28.876 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.198 seconds (process running for 4.978)
2023-06-15 16:16:41.053 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:16:41.061 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:16:41.061 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:16:41.062 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:16:41.368 [http-nio-8080-exec-1] INFO  c.m.M.logging.DatabaseLoggingAspect - Performed Save operation on entity of type InvalidToken.
2023-06-15 16:16:41.379 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: 
2023-06-15 16:16:48.147 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: 
2023-06-15 16:18:37.314 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 10440 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:18:37.319 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:18:37.320 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:18:37.857 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:18:37.947 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 84 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:18:38.934 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:18:38.943 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:18:38.944 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:18:38.944 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:18:39.038 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:18:39.039 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1649 ms
2023-06-15 16:18:39.280 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4a216eb4]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:18:39.296 [cluster-ClusterId{value='648b1dbf75e0d5357b3daa03', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31558700}
2023-06-15 16:18:40.829 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2833c093, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7598d675, org.springframework.security.web.context.SecurityContextHolderFilter@61836cd9, org.springframework.security.web.header.HeaderWriterFilter@30bbe83, org.springframework.web.filter.CorsFilter@4946485c, org.springframework.security.web.authentication.logout.LogoutFilter@2b3b1124, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@4ae958b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7227926b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f75a9b1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c682e26, org.springframework.security.web.session.SessionManagementFilter@35a9e665, org.springframework.security.web.access.ExceptionTranslationFilter@1ae9d0e4, org.springframework.security.web.access.intercept.AuthorizationFilter@31f1b268]
2023-06-15 16:18:41.031 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:18:41.051 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:18:41.057 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.438 seconds (process running for 5.451)
2023-06-15 16:18:45.365 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:18:45.375 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:18:45.375 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:18:45.377 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:18:45.707 [http-nio-8080-exec-1] INFO  c.m.M.logging.DatabaseLoggingAspect - Performed Save operation on entity of type InvalidToken.
2023-06-15 16:19:33.977 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: 
2023-06-15 16:25:03.800 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 16804 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:25:03.803 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:25:03.805 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:25:04.535 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:25:04.612 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:25:05.581 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:25:05.590 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:25:05.591 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:25:05.591 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:25:05.688 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:25:05.688 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1812 ms
2023-06-15 16:25:05.941 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1f129467]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:25:05.960 [cluster-ClusterId{value='648b1f41d16dfa54f83e2943', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34404100}
2023-06-15 16:25:07.552 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@420b55ed, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f237ae7, org.springframework.security.web.context.SecurityContextHolderFilter@7a7f9d45, org.springframework.security.web.header.HeaderWriterFilter@14b5325f, org.springframework.web.filter.CorsFilter@42edde25, org.springframework.security.web.authentication.logout.LogoutFilter@2591d23a, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@6fe5da76, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b98355f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@949d347, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77d95e5a, org.springframework.security.web.session.SessionManagementFilter@6adcf059, org.springframework.security.web.access.ExceptionTranslationFilter@5b5b9521, org.springframework.security.web.access.intercept.AuthorizationFilter@7037a680]
2023-06-15 16:25:07.734 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:25:07.751 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:25:07.766 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.579 seconds (process running for 5.532)
2023-06-15 16:25:21.358 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:25:21.365 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:25:21.365 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:25:21.366 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:25:21.963 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: 
2023-06-15 16:26:32.307 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 15336 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:26:32.312 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:26:32.313 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:26:32.918 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:26:33.013 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 89 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:26:34.029 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:26:34.039 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:26:34.040 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:26:34.040 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:26:34.136 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:26:34.136 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1759 ms
2023-06-15 16:26:34.388 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11a3a45f]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:26:34.406 [cluster-ClusterId{value='648b1f9a04c94d55097f0339', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27423301}
2023-06-15 16:26:36.002 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30bbe83, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57b130f6, org.springframework.security.web.context.SecurityContextHolderFilter@2047adea, org.springframework.security.web.header.HeaderWriterFilter@36511772, org.springframework.web.filter.CorsFilter@67e4928c, org.springframework.security.web.authentication.logout.LogoutFilter@9d3a7a1, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@2cc61b3b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a06602f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46591e98, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72e75786, org.springframework.security.web.session.SessionManagementFilter@3ff26c9, org.springframework.security.web.access.ExceptionTranslationFilter@17ae13d5, org.springframework.security.web.access.intercept.AuthorizationFilter@6acb45c1]
2023-06-15 16:26:36.205 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:26:36.228 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:26:36.237 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.523 seconds (process running for 6.191)
2023-06-15 16:26:47.281 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:26:47.288 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:26:47.288 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:26:47.289 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:27:22.958 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: 
2023-06-15 16:27:54.580 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 9876 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:27:54.586 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:27:54.587 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:27:55.172 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:27:55.252 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:27:56.174 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:27:56.182 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:27:56.183 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:27:56.183 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:27:56.278 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:27:56.279 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1604 ms
2023-06-15 16:27:56.533 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@756b2d90]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:27:56.550 [cluster-ClusterId{value='648b1fec7fe32a2b47515b41', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34678600}
2023-06-15 16:27:58.190 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2dde0a34, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61836cd9, org.springframework.security.web.context.SecurityContextHolderFilter@5c60c08, org.springframework.security.web.header.HeaderWriterFilter@65b73689, org.springframework.web.filter.CorsFilter@1b632442, org.springframework.security.web.authentication.logout.LogoutFilter@30bbe83, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@7227926b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5fe3b058, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a661215, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f75a9b1, org.springframework.security.web.session.SessionManagementFilter@c82ad22, org.springframework.security.web.access.ExceptionTranslationFilter@71668a67, org.springframework.security.web.access.intercept.AuthorizationFilter@35a9e665]
2023-06-15 16:27:58.415 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:27:58.434 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:27:58.441 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.533 seconds (process running for 5.541)
2023-06-15 16:28:09.519 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:28:09.539 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:28:09.539 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:28:09.542 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:28:25.145 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: 
2023-06-15 16:31:22.278 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 23224 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:31:22.282 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:31:22.283 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:31:22.948 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:31:23.045 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:31:24.066 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:31:24.075 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:31:24.076 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:31:24.076 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:31:24.171 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:31:24.171 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1826 ms
2023-06-15 16:31:24.420 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3b11620a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:31:24.445 [cluster-ClusterId{value='648b20bc5ba15b3e555cf51b', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33178399}
2023-06-15 16:31:26.085 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5e681097, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@152891f8, org.springframework.security.web.context.SecurityContextHolderFilter@77f4038c, org.springframework.security.web.header.HeaderWriterFilter@664f49f, org.springframework.web.filter.CorsFilter@1d2c253, org.springframework.security.web.authentication.logout.LogoutFilter@638d2ce3, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@15a484a9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c15034f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43b4ec0c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b56c222, org.springframework.security.web.session.SessionManagementFilter@36511772, org.springframework.security.web.access.ExceptionTranslationFilter@3a8b9458, org.springframework.security.web.access.intercept.AuthorizationFilter@9d3a7a1]
2023-06-15 16:31:26.270 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:31:26.300 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:31:26.308 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.834 seconds (process running for 5.899)
2023-06-15 16:31:45.222 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:31:45.230 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:31:45.230 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:31:45.231 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:32:01.874 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: 
2023-06-15 16:50:00.646 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 18204 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:50:00.650 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:50:00.651 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:50:01.390 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:50:01.504 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 108 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:50:02.080 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed
2023-06-15 16:50:02.088 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-06-15 16:50:02.108 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:763)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:568)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.myhouse.MyHouse.MyHouseApplication.main(MyHouseApplication.java:13)
Caused by: java.lang.IllegalArgumentException: ProceedingJoinPoint is only supported for around advice
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.maybeBindProceedingJoinPoint(AbstractAspectJAdvice.java:408)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.calculateArgumentBindings(AbstractAspectJAdvice.java:382)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvice(ReflectiveAspectJAdvisorFactory.java:303)
	at org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl.instantiateAdvice(InstantiationModelAwarePointcutAdvisorImpl.java:150)
	at org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl.<init>(InstantiationModelAwarePointcutAdvisorImpl.java:114)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisor(ReflectiveAspectJAdvisorFactory.java:213)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisors(ReflectiveAspectJAdvisorFactory.java:144)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:110)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:95)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:280)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:509)
	... 14 common frames omitted
2023-06-15 16:50:38.389 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 17008 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:50:38.394 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:50:38.395 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:50:38.976 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:50:39.054 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:50:40.900 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:50:40.912 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:50:40.913 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:50:40.913 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:50:41.015 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:50:41.015 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2548 ms
2023-06-15 16:50:41.347 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2fd1ad8a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:50:41.369 [cluster-ClusterId{value='648b254130d84d0fc0ab74e6', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29514800}
2023-06-15 16:50:43.044 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ae9d0e4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6acb45c1, org.springframework.security.web.context.SecurityContextHolderFilter@3ff26c9, org.springframework.security.web.header.HeaderWriterFilter@17ae13d5, org.springframework.web.filter.CorsFilter@294c44b7, org.springframework.security.web.authentication.logout.LogoutFilter@5e2975ca, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@30bbe83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65b73689, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2047adea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57b130f6, org.springframework.security.web.session.SessionManagementFilter@5a6efe33, org.springframework.security.web.access.ExceptionTranslationFilter@28dacf31, org.springframework.security.web.access.intercept.AuthorizationFilter@7c47e077]
2023-06-15 16:50:43.237 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:50:43.259 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:50:43.266 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 5.605 seconds (process running for 6.553)
2023-06-15 16:51:21.106 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:51:21.114 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:51:21.114 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:51:21.115 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:51:21.368 [http-nio-8080-exec-1] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-15 16:51:42.333 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: 
2023-06-15 16:54:13.181 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 19816 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 16:54:13.187 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 16:54:13.188 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 16:54:13.747 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 16:54:13.824 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 11 MongoDB repository interfaces.
2023-06-15 16:54:14.739 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 16:54:14.748 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 16:54:14.748 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 16:54:14.749 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 16:54:14.841 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 16:54:14.841 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1583 ms
2023-06-15 16:54:15.083 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1d289d3f]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 16:54:15.099 [cluster-ClusterId{value='648b2617ea7a302d0de31ae5', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36627000}
2023-06-15 16:54:16.624 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5ee581db, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a6efe33, org.springframework.security.web.context.SecurityContextHolderFilter@66048ac4, org.springframework.security.web.header.HeaderWriterFilter@7037a680, org.springframework.web.filter.CorsFilter@3e5ebdfe, org.springframework.security.web.authentication.logout.LogoutFilter@28dacf31, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@71668a67, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d404a3c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@af9dd34, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ff26c9, org.springframework.security.web.session.SessionManagementFilter@18463720, org.springframework.security.web.access.ExceptionTranslationFilter@47ffdbba, org.springframework.security.web.access.intercept.AuthorizationFilter@43b4ec0c]
2023-06-15 16:54:16.847 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 16:54:16.867 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 16:54:16.873 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.377 seconds (process running for 5.331)
2023-06-15 16:54:23.804 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-15 16:54:23.810 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-15 16:54:23.811 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-15 16:54:23.812 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-15 16:54:40.115 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: logout.
2023-06-15 17:06:07.256 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 19624 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-15 17:06:07.259 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-15 17:06:07.260 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-15 17:06:07.889 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-15 17:06:07.989 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 95 ms. Found 11 MongoDB repository interfaces.
2023-06-15 17:06:08.880 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-15 17:06:08.889 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-15 17:06:08.890 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-15 17:06:08.890 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-15 17:06:08.978 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-15 17:06:08.979 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1654 ms
2023-06-15 17:06:09.197 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3a296107]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-15 17:06:09.215 [cluster-ClusterId{value='648b28e16b2fdd703df09c9c', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33733300}
2023-06-15 17:06:10.699 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d404a3c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@af9dd34, org.springframework.security.web.context.SecurityContextHolderFilter@54556723, org.springframework.security.web.header.HeaderWriterFilter@7a7f9d45, org.springframework.web.filter.CorsFilter@48692405, org.springframework.security.web.authentication.logout.LogoutFilter@f237ae7, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@151659dd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@380e33c2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3bc891f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a58e0e9, org.springframework.security.web.session.SessionManagementFilter@2d230cff, org.springframework.security.web.access.ExceptionTranslationFilter@6adcf059, org.springframework.security.web.access.intercept.AuthorizationFilter@66048ac4]
2023-06-15 17:06:10.884 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-15 17:06:10.902 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-15 17:06:10.908 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.278 seconds (process running for 5.064)
2023-06-16 21:52:44.332 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 22868 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-16 21:52:44.337 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-16 21:52:44.338 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-16 21:52:46.193 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-16 21:52:46.313 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113 ms. Found 11 MongoDB repository interfaces.
2023-06-16 21:52:47.962 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-16 21:52:47.988 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-16 21:52:47.989 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-16 21:52:47.990 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-16 21:52:48.155 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-16 21:52:48.158 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3728 ms
2023-06-16 21:52:48.710 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@691541bc]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-16 21:52:48.735 [cluster-ClusterId{value='648cbd907fe7cd4d5d6e4381', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41239600}
2023-06-16 21:52:51.674 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4bff28e7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39e7e040, org.springframework.security.web.context.SecurityContextHolderFilter@66314fee, org.springframework.security.web.header.HeaderWriterFilter@aa8dce8, org.springframework.web.filter.CorsFilter@2591d23a, org.springframework.security.web.authentication.logout.LogoutFilter@6124dda2, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@6c1f15df, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13404f75, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cc90398, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e95b0ab, org.springframework.security.web.session.SessionManagementFilter@1e4d8770, org.springframework.security.web.access.ExceptionTranslationFilter@3ec7eb5, org.springframework.security.web.access.intercept.AuthorizationFilter@8d29719]
2023-06-16 21:52:51.921 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-16 21:52:51.944 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-16 21:52:51.952 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 8.443 seconds (process running for 15.065)
2023-06-16 21:53:45.944 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-16 21:53:45.945 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-16 21:53:45.949 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2023-06-16 21:53:46.031 [http-nio-8080-exec-2] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774}] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-16 21:53:46.935 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-16 22:09:07.447 [http-nio-8080-exec-10] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:09:55.676 [http-nio-8080-exec-2] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:09:57.700 [http-nio-8080-exec-4] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:09:57.713 [http-nio-8080-exec-3] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:10:10.856 [http-nio-8080-exec-6] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:10:22.715 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-16 22:26:11.418 [http-nio-8080-exec-2] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:27:36.356 [http-nio-8080-exec-4] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:29:14.838 [http-nio-8080-exec-7] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:29:32.224 [http-nio-8080-exec-8] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:33:00.066 [http-nio-8080-exec-9] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:33:48.295 [http-nio-8080-exec-2] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:38:31.160 [http-nio-8080-exec-4] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:44:04.591 [http-nio-8080-exec-7] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:44:04.650 [http-nio-8080-exec-7] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:44:12.125 [http-nio-8080-exec-8] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:44:12.149 [http-nio-8080-exec-6] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:44:23.005 [http-nio-8080-exec-10] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 22:44:28.211 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-16 23:00:10.366 [http-nio-8080-exec-5] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 23:00:34.051 [http-nio-8080-exec-8] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 23:00:34.062 [http-nio-8080-exec-6] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 23:00:37.820 [http-nio-8080-exec-10] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 23:00:37.832 [http-nio-8080-exec-2] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 23:00:38.665 [http-nio-8080-exec-1] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 23:00:43.623 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-16 23:35:23.855 [http-nio-8080-exec-1] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 23:35:23.899 [http-nio-8080-exec-4] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 23:35:40.769 [http-nio-8080-exec-6] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-16 23:35:46.762 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-16 23:41:50.597 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-16 23:41:53.041 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-16 23:42:01.470 [http-nio-8080-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.myhouse.MyHouse.model.device.Device` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('648a1816664a25569dc2d0a9')]
2023-06-16 23:42:29.205 [http-nio-8080-exec-9] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-16 23:42:49.378 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 25824 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-16 23:42:49.383 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-16 23:42:49.384 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-16 23:42:51.057 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-16 23:42:51.134 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 11 MongoDB repository interfaces.
2023-06-16 23:42:53.041 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-16 23:42:53.052 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-16 23:42:53.053 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-16 23:42:53.054 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-16 23:42:53.187 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-16 23:42:53.187 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3728 ms
2023-06-16 23:42:53.481 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@57151b3a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-16 23:42:53.500 [cluster-ClusterId{value='648cd75d995aab658b19030e', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30094900}
2023-06-16 23:42:55.816 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@45ad3cd8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b90cc1, org.springframework.security.web.context.SecurityContextHolderFilter@352c3d70, org.springframework.security.web.header.HeaderWriterFilter@21c99abf, org.springframework.web.filter.CorsFilter@5a2f401a, org.springframework.security.web.authentication.logout.LogoutFilter@53e4a19e, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@6bdedbbd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d17906, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@97beeaf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47b961e2, org.springframework.security.web.session.SessionManagementFilter@113d0f75, org.springframework.security.web.access.ExceptionTranslationFilter@356f20b7, org.springframework.security.web.access.intercept.AuthorizationFilter@f5ae29e]
2023-06-16 23:42:56.122 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-16 23:42:56.157 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-16 23:42:56.170 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 7.429 seconds (process running for 8.682)
2023-06-16 23:43:32.235 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-16 23:43:32.244 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-16 23:43:32.244 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-16 23:43:32.245 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-16 23:43:32.757 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-16 23:43:45.533 [http-nio-8080-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.myhouse.MyHouse.model.device.Device` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('648a1816664a25569dc2d0a9')]
2023-06-16 23:43:52.512 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.myhouse.MyHouse.model.device.Device` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('648a1816664a25569dc2d0a9')]
2023-06-16 23:46:09.180 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 7684 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-16 23:46:09.187 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-16 23:46:09.188 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-16 23:46:09.877 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-16 23:46:09.958 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 11 MongoDB repository interfaces.
2023-06-16 23:46:10.968 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-16 23:46:10.978 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-16 23:46:10.979 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-16 23:46:10.979 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-16 23:46:11.078 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-16 23:46:11.079 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1800 ms
2023-06-16 23:46:11.341 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@11c88cca]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-16 23:46:11.363 [cluster-ClusterId{value='648cd8238eae97313513c026', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36518000}
2023-06-16 23:46:13.141 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6acb45c1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@294c44b7, org.springframework.security.web.context.SecurityContextHolderFilter@2ecdcfe3, org.springframework.security.web.header.HeaderWriterFilter@69f3e556, org.springframework.web.filter.CorsFilter@30bbe83, org.springframework.security.web.authentication.logout.LogoutFilter@38cf4497, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@57b130f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2047adea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5af40e45, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67e4928c, org.springframework.security.web.session.SessionManagementFilter@3e5ebdfe, org.springframework.security.web.access.ExceptionTranslationFilter@47e60b71, org.springframework.security.web.access.intercept.AuthorizationFilter@41bd6a0f]
2023-06-16 23:46:13.337 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-16 23:46:13.363 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-16 23:46:13.373 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 5.008 seconds (process running for 6.15)
2023-06-16 23:46:36.450 [http-nio-8080-exec-3] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-16 23:46:36.475 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-16 23:46:36.476 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-16 23:46:36.477 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-16 23:46:38.350 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-16 23:46:41.988 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-16 23:46:51.587 [http-nio-8080-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.myhouse.MyHouse.model.device.Device` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('648a1816664a25569dc2d0a9')]
2023-06-16 23:47:02.908 [http-nio-8080-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.myhouse.MyHouse.model.device.Device` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('648a1816664a25569dc2d0a9')]
2023-06-16 23:54:12.217 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 26288 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-16 23:54:12.225 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-16 23:54:12.227 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-16 23:54:13.231 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-16 23:54:13.314 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 11 MongoDB repository interfaces.
2023-06-16 23:54:14.243 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-16 23:54:14.252 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-16 23:54:14.253 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-16 23:54:14.253 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-16 23:54:14.345 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-16 23:54:14.345 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1943 ms
2023-06-16 23:54:14.579 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7a84788f]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-16 23:54:14.599 [cluster-ClusterId{value='648cda063642d825d4640d56', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33434400}
2023-06-16 23:54:16.064 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@33e8e146, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f4d38f9, org.springframework.security.web.context.SecurityContextHolderFilter@5a2f401a, org.springframework.security.web.header.HeaderWriterFilter@62360a68, org.springframework.web.filter.CorsFilter@18463720, org.springframework.security.web.authentication.logout.LogoutFilter@670a4738, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@64eeddd8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47b961e2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d2cb2d0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10f8e2d2, org.springframework.security.web.session.SessionManagementFilter@1fc5c0b2, org.springframework.security.web.access.ExceptionTranslationFilter@2cdb5974, org.springframework.security.web.access.intercept.AuthorizationFilter@4f8900b0]
2023-06-16 23:54:16.246 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-16 23:54:16.265 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-16 23:54:16.272 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.837 seconds (process running for 5.865)
2023-06-16 23:54:26.254 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 27096 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-16 23:54:26.258 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-16 23:54:26.259 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-16 23:54:26.968 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-16 23:54:27.050 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 11 MongoDB repository interfaces.
2023-06-16 23:54:28.003 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-16 23:54:28.014 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-16 23:54:28.015 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-16 23:54:28.016 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-16 23:54:28.131 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-16 23:54:28.132 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1801 ms
2023-06-16 23:54:28.375 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@69796bd0]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-16 23:54:28.394 [cluster-ClusterId{value='648cda1466c10a61416a4e39', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30177400}
2023-06-16 23:54:29.930 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@41bd6a0f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ae9d0e4, org.springframework.security.web.context.SecurityContextHolderFilter@71668a67, org.springframework.security.web.header.HeaderWriterFilter@795faad, org.springframework.web.filter.CorsFilter@6acb45c1, org.springframework.security.web.authentication.logout.LogoutFilter@43d6262c, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@294c44b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ecdcfe3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65b73689, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30bbe83, org.springframework.security.web.session.SessionManagementFilter@5ee581db, org.springframework.security.web.access.ExceptionTranslationFilter@78bd02c8, org.springframework.security.web.access.intercept.AuthorizationFilter@4df7b4ac]
2023-06-16 23:54:30.125 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-16 23:54:30.147 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-16 23:54:30.154 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.56 seconds (process running for 5.756)
2023-06-16 23:54:36.721 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-16 23:54:36.733 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-16 23:54:36.733 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-16 23:54:36.735 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-06-16 23:54:37.215 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-16 23:54:43.366 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-16 23:55:12.020 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:55:48.440 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 18360 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-16 23:55:48.445 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-16 23:55:48.446 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-16 23:55:49.050 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-16 23:55:49.157 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 99 ms. Found 11 MongoDB repository interfaces.
2023-06-16 23:55:50.121 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-16 23:55:50.131 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-16 23:55:50.131 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-16 23:55:50.132 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-16 23:55:50.228 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-16 23:55:50.230 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1716 ms
2023-06-16 23:55:50.456 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@31aab981]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-16 23:55:50.481 [cluster-ClusterId{value='648cda660153d12bde8a2e2b', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28815600}
2023-06-16 23:55:52.131 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30bbe83, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57b130f6, org.springframework.security.web.context.SecurityContextHolderFilter@2047adea, org.springframework.security.web.header.HeaderWriterFilter@36511772, org.springframework.web.filter.CorsFilter@67e4928c, org.springframework.security.web.authentication.logout.LogoutFilter@9d3a7a1, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@2cc61b3b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a06602f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46591e98, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72e75786, org.springframework.security.web.session.SessionManagementFilter@3ff26c9, org.springframework.security.web.access.ExceptionTranslationFilter@17ae13d5, org.springframework.security.web.access.intercept.AuthorizationFilter@6acb45c1]
2023-06-16 23:55:52.349 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-16 23:55:52.369 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-16 23:55:52.378 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.575 seconds (process running for 5.975)
2023-06-16 23:56:06.055 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-16 23:56:06.061 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-16 23:56:06.062 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-16 23:56:06.063 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-16 23:56:06.553 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:11.769 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:12.425 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:12.948 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:13.084 [http-nio-8080-exec-5] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:13.245 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:13.697 [http-nio-8080-exec-7] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:14.101 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:14.567 [http-nio-8080-exec-9] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:14.937 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:15.111 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:15.237 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:15.576 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:15.737 [http-nio-8080-exec-5] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:16.307 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:16.691 [http-nio-8080-exec-7] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:17.139 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:17.299 [http-nio-8080-exec-9] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:17.698 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:18.179 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:18.595 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:19.045 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:19.460 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:19.859 [http-nio-8080-exec-5] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:20.012 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:20.251 [http-nio-8080-exec-7] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:20.597 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-16 23:56:21.057 [http-nio-8080-exec-9] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 00:00:50.748 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 00:02:24.380 [http-nio-8080-exec-5] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 00:10:29.749 [http-nio-8080-exec-7] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:10:36.513 [http-nio-8080-exec-9] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:10:36.563 [http-nio-8080-exec-8] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:10:42.071 [http-nio-8080-exec-1] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:10:51.971 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 00:41:44.012 [http-nio-8080-exec-6] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:41:44.076 [http-nio-8080-exec-7] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:41:44.086 [http-nio-8080-exec-9] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:41:44.096 [http-nio-8080-exec-8] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:42:01.473 [http-nio-8080-exec-6] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:42:07.759 [http-nio-8080-exec-7] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 00:58:47.257 [http-nio-8080-exec-5] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:58:49.145 [http-nio-8080-exec-7] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:58:49.163 [http-nio-8080-exec-9] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:58:53.608 [http-nio-8080-exec-8] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:58:53.623 [http-nio-8080-exec-10] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:58:55.753 [http-nio-8080-exec-3] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 00:59:01.015 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 00:59:06.799 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/device/message/ALARM': {public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByDeviceId(java.lang.String), public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByType(com.myhouse.MyHouse.model.device.DeviceMessageType)}] with root cause
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/device/message/ALARM': {public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByDeviceId(java.lang.String), public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByType(com.myhouse.MyHouse.model.device.DeviceMessageType)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:505)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1275)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:537)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-17 00:59:06.910 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/device/message/ALARM': {public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByDeviceId(java.lang.String), public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByType(com.myhouse.MyHouse.model.device.DeviceMessageType)}] with root cause
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/device/message/ALARM': {public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByDeviceId(java.lang.String), public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByType(com.myhouse.MyHouse.model.device.DeviceMessageType)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:505)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1275)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:537)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-17 00:59:11.080 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/device/message/ALARM': {public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByDeviceId(java.lang.String), public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByType(com.myhouse.MyHouse.model.device.DeviceMessageType)}] with root cause
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/device/message/ALARM': {public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByDeviceId(java.lang.String), public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByType(com.myhouse.MyHouse.model.device.DeviceMessageType)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:505)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1275)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:537)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-17 00:59:11.105 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/device/message/ALARM': {public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByDeviceId(java.lang.String), public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByType(com.myhouse.MyHouse.model.device.DeviceMessageType)}] with root cause
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/device/message/ALARM': {public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByDeviceId(java.lang.String), public org.springframework.http.ResponseEntity com.myhouse.MyHouse.controller.DeviceMessageController.getAllMessagesByType(com.myhouse.MyHouse.model.device.DeviceMessageType)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:126)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:505)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1275)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:537)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-17 01:00:17.462 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 3560 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-17 01:00:17.466 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-17 01:00:17.467 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-17 01:00:18.243 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-17 01:00:18.350 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 100 ms. Found 11 MongoDB repository interfaces.
2023-06-17 01:00:19.387 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-17 01:00:19.398 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-17 01:00:19.399 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-17 01:00:19.399 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-17 01:00:19.524 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-17 01:00:19.525 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1960 ms
2023-06-17 01:00:19.816 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7f27f59b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-17 01:00:19.845 [cluster-ClusterId{value='648ce983b42bd45b10ecc4ce', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34195800}
2023-06-17 01:00:21.475 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@79617c3d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@49cceb19, org.springframework.security.web.context.SecurityContextHolderFilter@295f2d1b, org.springframework.security.web.header.HeaderWriterFilter@13cf5f8a, org.springframework.web.filter.CorsFilter@197d5a87, org.springframework.security.web.authentication.logout.LogoutFilter@61d011e, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@131d977f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44e08a7a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78bd02c8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@616f81b5, org.springframework.security.web.session.SessionManagementFilter@5dd23809, org.springframework.security.web.access.ExceptionTranslationFilter@25e95af1, org.springframework.security.web.access.intercept.AuthorizationFilter@212e39ee]
2023-06-17 01:00:21.726 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-17 01:00:21.754 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-17 01:00:21.762 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 5.043 seconds (process running for 6.273)
2023-06-17 01:00:47.358 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-17 01:00:47.369 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-17 01:00:47.369 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-17 01:00:47.371 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-06-17 01:00:47.728 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-17 01:00:59.843 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 01:03:02.182 [http-nio-8080-exec-7] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method isCertificateChainSignatureInvalid of class com.myhouse.MyHouse.service.CertificateInfoService: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null
2023-06-17 01:03:02.186 [http-nio-8080-exec-7] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method getAll of class com.myhouse.MyHouse.service.CertificateService: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null
2023-06-17 01:03:02.189 [http-nio-8080-exec-7] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method getAll of class com.myhouse.MyHouse.controller.CertificateController: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null
2023-06-17 01:03:02.194 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null
	at com.myhouse.MyHouse.service.CertificateInfoService.isCertificateChainSignatureInvalid(CertificateInfoService.java:102)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.service.CertificateInfoService$$SpringCGLIB$$0.isCertificateChainSignatureInvalid(<generated>)
	at com.myhouse.MyHouse.service.CertificateService.verifyCertificate(CertificateService.java:148)
	at com.myhouse.MyHouse.service.CertificateService.getCertificateInsight(CertificateService.java:197)
	at com.myhouse.MyHouse.service.CertificateService.lambda$getAll$0(CertificateService.java:172)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at com.myhouse.MyHouse.service.CertificateService.getAll(CertificateService.java:170)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.service.CertificateService$$SpringCGLIB$$0.getAll(<generated>)
	at com.myhouse.MyHouse.controller.CertificateController.getAll(CertificateController.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.controller.CertificateController$$SpringCGLIB$$0.getAll(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:537)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-17 01:03:02.246 [http-nio-8080-exec-1] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method isCertificateChainSignatureInvalid of class com.myhouse.MyHouse.service.CertificateInfoService: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null
2023-06-17 01:03:02.248 [http-nio-8080-exec-1] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method getAll of class com.myhouse.MyHouse.service.CertificateService: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null
2023-06-17 01:03:02.252 [http-nio-8080-exec-1] ERROR c.m.M.logging.ExceptionLoggingAspect - Exception in method getAll of class com.myhouse.MyHouse.controller.CertificateController: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null
2023-06-17 01:03:02.253 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.security.cert.Certificate.verify(java.security.PublicKey)" because "leafCertificate" is null
	at com.myhouse.MyHouse.service.CertificateInfoService.isCertificateChainSignatureInvalid(CertificateInfoService.java:102)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.service.CertificateInfoService$$SpringCGLIB$$0.isCertificateChainSignatureInvalid(<generated>)
	at com.myhouse.MyHouse.service.CertificateService.verifyCertificate(CertificateService.java:148)
	at com.myhouse.MyHouse.service.CertificateService.getCertificateInsight(CertificateService.java:197)
	at com.myhouse.MyHouse.service.CertificateService.lambda$getAll$0(CertificateService.java:172)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at com.myhouse.MyHouse.service.CertificateService.getAll(CertificateService.java:170)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.service.CertificateService$$SpringCGLIB$$0.getAll(<generated>)
	at com.myhouse.MyHouse.controller.CertificateController.getAll(CertificateController.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at com.myhouse.MyHouse.controller.CertificateController$$SpringCGLIB$$0.getAll(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:537)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter.doFilterInternal(TokenAuthorizationFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-06-17 01:03:09.091 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:03:09.122 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:03:09.150 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRoles in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user roles.
2023-06-17 01:03:51.591 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:03:51.624 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:03:51.652 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRoles in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user roles.
2023-06-17 01:04:09.596 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:04:09.622 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:04:09.645 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRoles in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user roles.
2023-06-17 01:04:18.806 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:04:18.835 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:04:18.868 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRoles in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user roles.
2023-06-17 01:04:29.257 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:04:29.315 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:04:29.344 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRoles in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user roles.
2023-06-17 01:05:13.648 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method createRealEstate in class com.myhouse.MyHouse.controller.RealEstateController completed successfully. Message: Created real estate.
2023-06-17 01:05:13.754 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method createConfiguration in class com.myhouse.MyHouse.controller.RealEstateConfigurationController completed successfully. Message: Created new real estate configuration.
2023-06-17 01:05:28.081 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:05:28.115 [http-nio-8080-exec-7] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 01:05:28.148 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRoles in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user roles.
2023-06-17 01:22:08.003 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 23840 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-17 01:22:08.010 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-17 01:22:08.014 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-17 01:22:09.671 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-17 01:22:09.846 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 164 ms. Found 11 MongoDB repository interfaces.
2023-06-17 01:22:12.441 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-17 01:22:12.455 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-17 01:22:12.456 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-17 01:22:12.457 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-17 01:22:12.646 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-17 01:22:12.646 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4176 ms
2023-06-17 01:22:13.416 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5ec6fede]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-17 01:22:13.437 [cluster-ClusterId{value='648ceea5efaf7c124cfcc7b1', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40171300}
2023-06-17 01:22:17.919 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6b6fd0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d718248, org.springframework.security.web.context.SecurityContextHolderFilter@356f20b7, org.springframework.security.web.header.HeaderWriterFilter@6dbb3d7d, org.springframework.web.filter.CorsFilter@2cdb5974, org.springframework.security.web.authentication.logout.LogoutFilter@44485db, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@8aa5ab4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69de72ec, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21c99abf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53e4a19e, org.springframework.security.web.session.SessionManagementFilter@6e668322, org.springframework.security.web.access.ExceptionTranslationFilter@54687fd0, org.springframework.security.web.access.intercept.AuthorizationFilter@13404f75]
2023-06-17 01:22:18.194 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-17 01:22:18.229 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-17 01:22:18.238 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 11.238 seconds (process running for 12.798)
2023-06-17 01:39:14.777 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-17 01:39:14.795 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-17 01:39:14.911 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 116 ms
2023-06-17 01:39:15.088 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-17 01:39:16.503 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 12:15:19.910 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 12820 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-17 12:15:19.921 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-17 12:15:19.922 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-17 12:15:21.529 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-17 12:15:21.628 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92 ms. Found 11 MongoDB repository interfaces.
2023-06-17 12:15:23.087 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-17 12:15:23.098 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-17 12:15:23.099 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-17 12:15:23.100 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-17 12:15:23.212 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-17 12:15:23.213 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3195 ms
2023-06-17 12:15:23.530 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@56a4abd0]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-17 12:15:23.551 [cluster-ClusterId{value='648d87bbbf2050359b907d1a', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42801500}
2023-06-17 12:15:26.687 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3d59933, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a0c3aa8, org.springframework.security.web.context.SecurityContextHolderFilter@44485db, org.springframework.security.web.header.HeaderWriterFilter@773f3360, org.springframework.web.filter.CorsFilter@3534651a, org.springframework.security.web.authentication.logout.LogoutFilter@45ad3cd8, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@2d593b56, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22604c7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d8f2cfd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@26a33cf, org.springframework.security.web.session.SessionManagementFilter@18a0721b, org.springframework.security.web.access.ExceptionTranslationFilter@25dcf1b6, org.springframework.security.web.access.intercept.AuthorizationFilter@3bc891f2]
2023-06-17 12:15:27.086 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-17 12:15:27.127 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-17 12:15:27.149 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 8.609 seconds (process running for 11.029)
2023-06-17 12:15:27.276 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-17 12:15:27.277 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-17 12:15:27.279 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-06-17 12:15:27.365 [http-nio-8080-exec-3] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774}] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-17 12:15:28.520 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 12:17:44.768 [http-nio-8080-exec-9] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceToRealEstateConfiguration in class com.myhouse.MyHouse.controller.DeviceController completed successfully. Message: Device added to real estate.
2023-06-17 14:16:40.784 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 1228 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-17 14:16:40.787 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-17 14:16:40.788 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-17 14:16:42.072 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-17 14:16:42.151 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 12 MongoDB repository interfaces.
2023-06-17 14:16:43.161 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-17 14:16:43.173 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-17 14:16:43.174 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-17 14:16:43.174 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-17 14:16:43.277 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-17 14:16:43.277 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2423 ms
2023-06-17 14:16:43.514 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5d1d9d73]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-17 14:16:43.532 [cluster-ClusterId{value='648da42be46a876b62ff6abc', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33021400}
2023-06-17 14:16:45.129 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@13390a96, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a8b9458, org.springframework.security.web.context.SecurityContextHolderFilter@5876bed9, org.springframework.security.web.header.HeaderWriterFilter@3d59933, org.springframework.web.filter.CorsFilter@7497a554, org.springframework.security.web.authentication.logout.LogoutFilter@f44d033, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@5dd23809, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67f8f5a6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@141b011a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@664f49f, org.springframework.security.web.session.SessionManagementFilter@2591d23a, org.springframework.security.web.access.ExceptionTranslationFilter@380e33c2, org.springframework.security.web.access.intercept.AuthorizationFilter@57b33c29]
2023-06-17 14:16:45.319 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-17 14:16:45.336 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-17 14:16:45.342 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 5.173 seconds (process running for 6.752)
2023-06-17 14:16:48.984 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-17 14:16:48.984 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-17 14:16:48.985 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-17 14:16:49.020 [http-nio-8080-exec-4] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-17 14:16:49.542 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 14:30:03.098 [http-nio-8080-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'multipart/form-data;boundary=----WebKitFormBoundarysZKM8guijI04YRoL;charset=UTF-8' is not supported]
2023-06-17 14:30:16.685 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-17 14:30:21.004 [http-nio-8080-exec-5] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 14:30:38.965 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'multipart/form-data;boundary=----WebKitFormBoundaryjOsQH7jlu0KXUsFd;charset=UTF-8' is not supported]
2023-06-17 14:33:31.864 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 16228 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-17 14:33:31.869 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-17 14:33:31.871 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-17 14:33:32.715 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-17 14:33:32.796 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 12 MongoDB repository interfaces.
2023-06-17 14:33:33.681 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-17 14:33:33.690 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-17 14:33:33.691 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-17 14:33:33.691 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-17 14:33:33.781 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-17 14:33:33.781 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1824 ms
2023-06-17 14:33:34.024 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@102c18e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-17 14:33:34.042 [cluster-ClusterId{value='648da81d8f6a2157db492973', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31063800}
2023-06-17 14:33:35.489 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@25e95af1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4fa8297b, org.springframework.security.web.context.SecurityContextHolderFilter@2d593b56, org.springframework.security.web.header.HeaderWriterFilter@5a2f401a, org.springframework.web.filter.CorsFilter@6644bdf5, org.springframework.security.web.authentication.logout.LogoutFilter@1f4d38f9, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@13cf5f8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29188050, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f122cdc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c9ea1d0, org.springframework.security.web.session.SessionManagementFilter@3d59933, org.springframework.security.web.access.ExceptionTranslationFilter@1fc5c0b2, org.springframework.security.web.access.intercept.AuthorizationFilter@f44d033]
2023-06-17 14:33:35.668 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-17 14:33:35.685 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-17 14:33:35.691 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 4.741 seconds (process running for 5.544)
2023-06-17 14:34:00.442 [http-nio-8080-exec-1] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":2,"i_p":1675666892774};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2023-06-17 14:34:00.450 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-17 14:34:00.450 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-17 14:34:00.452 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-06-17 14:34:00.780 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-17 14:34:08.597 [http-nio-8080-exec-5] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 14:45:32.545 [http-nio-8080-exec-9] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 14:51:36.888 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 14:52:15.072 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 14:55:01.924 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-17 15:08:03.400 [http-nio-8080-exec-10] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 15:08:10.060 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 15:08:44.554 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 15:08:44.597 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRealEstates in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user real estates.
2023-06-17 15:08:44.637 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method updateUserRoles in class com.myhouse.MyHouse.controller.UserController completed successfully. Message: Updated user roles.
2023-06-17 15:09:05.450 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceToRealEstateConfiguration in class com.myhouse.MyHouse.controller.DeviceController completed successfully. Message: Device added to real estate.
2023-06-17 15:09:33.435 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceToRealEstateConfiguration in class com.myhouse.MyHouse.controller.DeviceController completed successfully. Message: Device added to real estate.
2023-06-17 15:09:36.535 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-17 15:12:01.375 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 15:22:38.541 [http-nio-8080-exec-7] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 15:32:47.032 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 15:33:23.615 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 15:34:09.415 [http-nio-8080-exec-9] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 15:46:01.511 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 15:46:08.510 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:17.264 [http-nio-8080-exec-9] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:17.810 [http-nio-8080-exec-7] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:18.915 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:19.120 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:19.485 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:19.658 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:20.159 [http-nio-8080-exec-5] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:20.506 [http-nio-8080-exec-2] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:20.801 [http-nio-8080-exec-3] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:21.083 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:21.390 [http-nio-8080-exec-9] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:21.843 [http-nio-8080-exec-7] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:22.201 [http-nio-8080-exec-8] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:24.142 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:24.280 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:24.423 [http-nio-8080-exec-1] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:24.572 [http-nio-8080-exec-5] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method addDeviceMessage in class com.myhouse.MyHouse.controller.DeviceMessageController completed successfully. Message: Device message added.
2023-06-17 15:46:45.187 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 16:13:26.629 [http-nio-8080-exec-7] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 16:21:43.574 [http-nio-8080-exec-2] DEBUG c.m.M.s.a.TokenAuthorizationFilter - Token expired!
2023-06-17 16:21:51.414 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 16:28:48.952 [http-nio-8080-exec-6] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-17 16:28:52.957 [http-nio-8080-exec-7] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 16:30:55.337 [http-nio-8080-exec-4] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method logout in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Logout successful.
2023-06-17 16:30:59.414 [http-nio-8080-exec-10] INFO  c.m.M.logging.SuccessLoggingAspect - Execution of method login in class com.myhouse.MyHouse.controller.AuthController completed successfully. Message: Login successful.
2023-06-17 16:48:16.424 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Starting MyHouseApplication using Java 19.0.1 with PID 14912 (D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back\target\classes started by Dunja in D:\FTN\Semestar_8\Bezbednost_u_sistemima_elektornskog_poslovanja\Projekat\BSEP-Back)
2023-06-17 16:48:16.431 [main] DEBUG c.myhouse.MyHouse.MyHouseApplication - Running with Spring Boot v3.0.5, Spring v6.0.7
2023-06-17 16:48:16.432 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - No active profile set, falling back to 1 default profile: "default"
2023-06-17 16:48:17.109 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-06-17 16:48:17.195 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 12 MongoDB repository interfaces.
2023-06-17 16:48:18.235 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-06-17 16:48:18.245 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2023-06-17 16:48:18.246 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-17 16:48:18.246 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-06-17 16:48:18.338 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-17 16:48:18.338 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1833 ms
2023-06-17 16:48:18.570 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@b30a50d]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2023-06-17 16:48:18.586 [cluster-ClusterId{value='648dc7b27d3a554a68798415', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29658200}
2023-06-17 16:48:20.200 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7c9ea1d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72f3acc9, org.springframework.security.web.context.SecurityContextHolderFilter@5bf523e3, org.springframework.security.web.header.HeaderWriterFilter@2d230cff, org.springframework.web.filter.CorsFilter@319b1c77, org.springframework.security.web.authentication.logout.LogoutFilter@66048ac4, com.myhouse.MyHouse.security.auth.TokenAuthorizationFilter@584136c1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65259c53, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4bff28e7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@51d88c38, org.springframework.security.web.session.SessionManagementFilter@26a33cf, org.springframework.security.web.access.ExceptionTranslationFilter@6bdedbbd, org.springframework.security.web.access.intercept.AuthorizationFilter@6644bdf5]
2023-06-17 16:48:20.385 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2023-06-17 16:48:20.403 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-06-17 16:48:20.409 [main] INFO  c.myhouse.MyHouse.MyHouseApplication - Started MyHouseApplication in 5.265 seconds (process running for 6.543)
